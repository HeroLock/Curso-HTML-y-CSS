# ------------------------ # Practica de Grid
 -- -- HTML 
    <div class="container">
        <div class="item item-1"></div>
        <div class="item item-2">2</div>
        <div class="item item-3">3</div>
        <div class="item item-4">4</div>
        <div class="item item-5">5</div>
        <div class="item item-6">6</div>
        <div class="item item-7">7</div>
        <div class="item item-8">8</div>
        <div class="item item-9">9</div>
        <div class="item item-10">10</div>
        <div class="item item-11">11</div>
        <div class="item item-12">12</div>
    </div>
 -- -- CSS 
body {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 50px;
  margin-bottom: 50px;
}
/* Display grid */
.container {
  flex: 1 1 1;
  display: grid;
  place-content: center;
  width: 80%;
  min-width: max-content;
  /* grid-template-columns: repeat(3, 1fr); */
  grid-auto-flow: dense;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  grid-template-rows: repeat(3, 1fr);
  grid-auto-rows: 1fr;
  grid-auto-columns: 1fr;
  gap: var(--large);
  row-gap: var(--small);

  .item-1{
    grid-area:  1 / 1 / 3 / last;
  }
  .item-12{
    grid-column-end: span;
  }
}

/* Styles */
.container {
  font-family: var(--text);
  font-weight: 600;

  /* -Items */
  .item{
    color: var(--bright-color);
    border-radius: var(--small);
    padding: var(--small);
    min-width: var(--xxxlarge);
    min-height: 100px;
    transition: all 0.3s ease-in-out;
    max-width: 100%;
  }
  .item:not(:first-child):hover {
    scale: 1.05;
    cursor: pointer;
    box-shadow: 0 0 10px #0007;
  }
  .item:first-child {
    background-image: 
    linear-gradient(to right,#000c, #0000),
    url(../../images/Arbol.png);
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
  }
  .item:not(:first-child) {
    background-color: var(--dark-color);
  }
  .item:not(:first-child):hover {
    background-color: #777;
  }
}

@media screen and (max-width: 1110px) {
  .container {
    grid-template-columns: repeat(4, 1fr);
    .item-1{
        grid-area:  1 / 1 / 3 / last;
        }
  }
}

@media screen and (max-width: 820px) {
  .container {
    grid-template-columns: repeat(3, 1fr);
  }
  .item-7{
    grid-column-end: span 2;
  }
}

@media screen and (max-width: 600px) {
  .container {
    grid-template-columns: repeat(2, 1fr);
  }
  .item-7{
    grid-column-end: span 1;
  }
}